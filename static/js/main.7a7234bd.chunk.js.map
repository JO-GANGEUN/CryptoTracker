{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","ok","Error","status","json","catch","error","process","headers","Accept","localResponse","fetchCoinInfo","coinId","Container","styled","div","Header","header","Title","h1","props","theme","accentColor","CoinList","ul","Coin","li","cardBgColor","textColor","Loader","Img","img","Coins","isLoading","data","useQuery","_jsxs","children","_jsx","Helmet","slice","map","coin","Link","to","pathname","id","state","name","symbol","src","Price","Chart","_ref","fetchCoinHistory","ApexChart","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","time_close","fill","gradient","gradientToColors","colors","tooltip","x","format","formatter","undefined","y","title","value","span","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","useParams","useLocation","chartMatch","useRouteMatch","priceMatch","infoLoading","infoData","priceLoading","priceData","_Fragment","rank","quotes","USD","toFixed","description","total_supply","max_supply","Switch","Route","path","Router","BrowserRouter","lightTheme","bgColor","darkTheme","GlobalStyle","createGlobalStyle","App","isDark","setIsDark","useState","ThemeProvider","onClick","toggleTheme","current","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"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","file":"static/js/main.7a7234bd.chunk.js","sourcesContent":["const BASE_URL = \"https://api.coinpaprika.com/v1/\";\r\nconst BASE_URL2 = \"https://ohlcv-api.nomadcoders.workers.dev\";\r\nconst LOCAL_JSON_PATH = \"/data/coins.json\";\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`)\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw new Error(`API Error : ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .catch((error) => {\r\n      return fetch(process.env.PUBLIC_URL + \"/data/coins.json\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }).then((localResponse) => {\r\n        if (!localResponse.ok) {\r\n          return;\r\n        }\r\n        const answer = localResponse.json();\r\n        return answer;\r\n      });\r\n    });\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinPriceInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinHistory(coinId: string) {\r\n  return fetch(`${BASE_URL2}?coinId=${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Title = styled.h1`\r\n  color: ${(props) => props.theme.accentColor};\r\n  font-size: 48px;\r\n`;\r\nconst CoinList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: ${(props) => props.theme.cardBgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n\r\n  border-radius: 15px;\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  a {\r\n    transition: color 0.2s ease-in;\r\n    display: block;\r\n    padding: 20px;\r\n  }\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 10px;\r\n`;\r\n\r\ninterface CoinInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title> Coins</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title> Coins</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader> \"Loading ...\"</Loader>\r\n      ) : (\r\n        <CoinList>\r\n          {data?.slice(0, 20).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: {\r\n                    name: coin.name,\r\n                    symbol: coin.symbol,\r\n                  },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\r\n                ></Img>\r\n                {coin.name} &rarr;{\" \"}\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","function Price() {\r\n  return <h1>price</h1>;\r\n}\r\n\r\nexport default Price;\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface HistoryInterface {\r\n  time_open: string;\r\n  time_close: string;\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n  close: number;\r\n  volume: number;\r\n  market_cap: number;\r\n}\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<HistoryInterface[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId)\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"Loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => price.close) as number[],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: {\r\n              mode: \"dark\",\r\n            },\r\n            chart: {\r\n              height: 300,\r\n              width: 500,\r\n              toolbar: {\r\n                show: false,\r\n              },\r\n              background: \"transparent\",\r\n            },\r\n            grid: { show: false },\r\n            stroke: {\r\n              curve: \"smooth\",\r\n              width: 4,\r\n            },\r\n            yaxis: {\r\n              show: false,\r\n            },\r\n            xaxis: {\r\n              axisBorder: { show: false },\r\n              axisTicks: { show: false },\r\n              labels: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"blue\"] },\r\n              colors: [\"red\"],\r\n            },\r\n            tooltip: {\r\n              x: {\r\n                show: true,\r\n                format: \"dd MMM\",\r\n                formatter: undefined,\r\n              },\r\n              y: {\r\n                formatter: undefined,\r\n                title: {\r\n                  formatter: (value) => `$${value}`,\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  Link,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { fetchCoinInfo } from \"../api\";\r\nimport { useQuery } from \"react-query\";\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\n\r\n//TOFIX dupplicated components\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n  max-width: 480px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 15vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Overview = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 10px 20px;\r\n  border-radius: 10px;\r\n`;\r\nconst OverviewItem = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  span:first-child {\r\n    font-size: 10px;\r\n    font-weight: 400;\r\n    text-transform: uppercase;\r\n    margin-bottom: 5px;\r\n  }\r\n`;\r\nconst Description = styled.p`\r\n  margin: 20px 0px;\r\n`;\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 25px 0px;\r\n  gap: 10px;\r\n`;\r\nconst Tab = styled.span<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  padding: 7px 0px;\r\n  border-radius: 10px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n  a {\r\n    display: block;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\n\r\ninterface CoinInfoInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface CoinPriceInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n\r\n  const { isLoading: infoLoading, data: infoData } =\r\n    useQuery<CoinInfoInterface>([\"info\", coinId], () => fetchCoinInfo(coinId));\r\n\r\n  const { isLoading: priceLoading, data: priceData } =\r\n    useQuery<CoinPriceInterface>(\r\n      [\"price\", coinId],\r\n      () => fetchCoinInfo(coinId),\r\n      {\r\n        // refetchInterval: 5000,\r\n      }\r\n    );\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title> {state?.name ? state.name : \"Loading...\"}</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title> {state?.name ? state.name : \"Loading...\"}</Title>\r\n      </Header>\r\n      {infoLoading || priceLoading ? (\r\n        <Loader> \"Loading ...\"</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank ? infoData?.rank : \"\"}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol ? \"$\" + infoData?.symbol : \"\"}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{priceData?.quotes.USD.price.toFixed(3)}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Description>{infoData?.description}</Description>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Suply:</span>\r\n              <span>{priceData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Suply:</span>\r\n              <span>{priceData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n          <Tabs>\r\n            <Tab isActive={chartMatch != null}>\r\n              <Link to={`/${coinId}/chart`}>chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch != null}>\r\n              <Link to={`/${coinId}/price`}>price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Coins from \"./routes/Coins\";\r\nimport Coin from \"./routes/Coin\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        {/* JSON 파일과 같은 정적 파일 경로를 제외 */}\r\n        <Route path=\"/data/*.json\" />\r\n        <Route path={\"/:coinId\"}>\r\n          <Coin />\r\n        </Route>\r\n        <Route path={\"/\"}>\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\nexport default Router;\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const lightTheme: DefaultTheme = {\r\n  bgColor: \"#d2dae2\",\r\n  cardBgColor: \"white\",\r\n  textColor: \"#2c3e50\",\r\n  // btnColor: \"balck\",\r\n  accentColor: \"#ff5e57\",\r\n};\r\n\r\nexport const darkTheme: DefaultTheme = {\r\n  bgColor: \"#485460\",\r\n  cardBgColor: \"#95a5a6\",\r\n  textColor: \"white\",\r\n  // btnColor: \"balck\",\r\n  accentColor: \"#ff5e57\",\r\n};\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Router from \"./Router\";\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+3:ital,wght@0,200..900;1,200..900&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\nmargin: 0;\npadding: 0;\nborder: 0;\nfont-size: 100%;\nfont: inherit;\nvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\ndisplay: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n display: none;\n}\nbody {\nline-height: 1;\n}\nmenu, ol, ul {\nlist-style: none;\n}\nblockquote, q {\nquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\ncontent: '';\ncontent: none;\n}\ntable {\nborder-collapse: collapse;\nborder-spacing: 0;\n}\n*{\n  box-sizing : border-box;\n}\nbody{\n  font-family: \"Source Sans 3\", sans-serif;\n  background-color:  ${(props) => props.theme.bgColor};\n  color:  ${(props) => props.theme.textColor};\n}\na{\n  text-decoration: none;\n  color : inherit;\n}\n`;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false);\n  const toggleTheme = () => setIsDark((current) => !current);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <button onClick={toggleTheme}>Toggle Mode</button>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport React from \"react\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}